{"version":3,"file":"js/574.10ee4809.js","mappings":"oKAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAQF,EAAII,QAASF,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,MAAM,CAACG,YAAY,mBAAmB,CAACH,EAAG,MAAM,CAACG,YAAY,eAAe,CAACL,EAAIM,GAAGN,EAAIO,GAAGP,EAAII,QAAQI,UAAUN,EAAG,MAAM,CAACG,YAAY,qBAAqB,CAACL,EAAIM,GAAGN,EAAIO,GAAGP,EAAII,QAAQK,gBAAgBP,EAAG,MAAM,CAACG,YAAY,kBAAkB,CAACL,EAAIM,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,sBAAsBK,MAAOV,EAAIW,iBAAiBX,EAAIY,cAAeZ,EAAII,QAAQS,WAAY,CAACb,EAAIM,GAAGN,EAAIO,GAAGP,EAAII,QAAQS,eAAeX,EAAG,MAAM,CAACG,YAAY,uBAAuB,CAACH,EAAG,MAAM,CAACG,YAAY,cAAcS,MAAM,CAAC,IAAMd,EAAII,QAAQW,UAAU,IAAM,QAAQb,EAAG,MAAM,CAACG,YAAY,sBAAsB,CAACL,EAAIM,GAAGN,EAAIO,GAAGP,EAAII,QAAQY,iBAAiBd,EAAG,MAAM,CAACG,YAAY,iBAAiB,CAACL,EAAIM,GAAGN,EAAIO,GAAGP,EAAIiB,iBAAiBjB,EAAII,QAAQc,oBAAoBlB,EAAImB,IACj2B,EACIC,EAAkB,G,oBCmBtB,GACAC,KAAA,OACAC,OAAA,CAAAC,EAAAA,EAAAC,EAAAA,GACAC,OAAAA,GACA,KAAAC,WACA,EACAC,SAAA,CACAvB,OAAAA,GACA,YAAAwB,OAAAC,QAAAC,QACA,EACAlB,aAAAA,GACA,YAAAgB,OAAAC,QAAAE,cACA,GAEAC,QAAA,CACAN,SAAAA,GACA,KAAAE,OAAAK,SAAA,iBAAAC,OAAAC,OAAAC,GACA,ICtCmP,I,UCQ/OC,GAAY,OACd,EACAtC,EACAqB,GACA,EACA,KACA,WACA,MAIF,EAAeiB,EAAiB,O,uDCnBzB,MAAMb,EAAqB,CAChCQ,QAAS,CACPrB,gBAAAA,CAAiB2B,EAAYzB,GAC3B,IAAIH,EAAQ,CAAC,EACb,IAAK,IAAI6B,KAAOD,EACVC,IAAQ1B,IACVH,EAAM8B,MAAQF,EAAWC,IAG7B,OAAO7B,CACT,G,uDCVG,MAAMa,EAAY,CACrBS,QAAS,CACLf,gBAAAA,CAAiBwB,GACb,IAAIC,EAAO,IAAIC,KAAKF,GAEpB,GAAIG,MAAMF,EAAKG,WAUb,MAAO,6BAVkB,CACzB,MAAMC,EAAOJ,EAAKK,cAAcC,WAAWC,SAAS,EAAG,KACjDC,GAASR,EAAKS,WAAa,GAAGC,iBAAiBH,SAAS,EAAG,KAC3DI,EAAMX,EAAKY,UAAUF,iBAAiBH,SAAS,EAAG,KAClDM,EAAMb,EAAKc,WAAWJ,iBAAiBH,SAAS,EAAG,KACnDQ,EAASf,EAAKgB,aAAaN,iBAAiBH,SAAS,EAAG,KACxDU,EAASjB,EAAKkB,aAAaR,iBAAiBH,SAAS,EAAG,KAE9D,MAAQ,GAAEH,KAAQI,KAASG,KAAOE,KAAQE,KAAWE,GACvD,CAGF,G","sources":["webpack://ulbi-project/./src/views/Post.vue","webpack://ulbi-project/src/views/Post.vue","webpack://ulbi-project/./src/views/Post.vue?ad03","webpack://ulbi-project/./src/views/Post.vue?78a1","webpack://ulbi-project/./src/mixins/categoryStyleMixin.js","webpack://ulbi-project/./src/mixins/dateMixin.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.getPost)?_c('div',{staticClass:\"post\"},[_c('div',{staticClass:\"post__container\"},[_c('div',{staticClass:\"post__title\"},[_vm._v(_vm._s(_vm.getPost.title))]),_c('div',{staticClass:\"post__description\"},[_vm._v(_vm._s(_vm.getPost.description))]),_c('div',{staticClass:\"post__category\"},[_vm._v(\" Category: \"),_c('span',{staticClass:\"post__category_name\",style:(_vm.getCategoryStyle(_vm.getCategories, _vm.getPost.category))},[_vm._v(_vm._s(_vm.getPost.category))])]),_c('div',{staticClass:\"post__img-container\"},[_c('img',{staticClass:\"post__image\",attrs:{\"src\":_vm.getPost.photo_url,\"alt\":\"\"}})]),_c('div',{staticClass:\"post__content_text\"},[_vm._v(_vm._s(_vm.getPost.content_text))]),_c('div',{staticClass:\"post__updated\"},[_vm._v(_vm._s(_vm.setFormattedDate(_vm.getPost.updated_at)))])])]):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"post\" v-if=\"getPost\">\r\n    <div class=\"post__container\">\r\n      <div class=\"post__title\">{{ getPost.title }}</div>\r\n      <div class=\"post__description\">{{ getPost.description }}</div>\r\n      <div class=\"post__category\">\r\n        Category: <span class=\"post__category_name\" :style=\"getCategoryStyle(getCategories, getPost.category)\">{{ getPost.category }}</span>\r\n      </div>\r\n      <div class=\"post__img-container\">\r\n        <img :src=\"getPost.photo_url\" alt=\"\" class=\"post__image\" />\r\n      </div>\r\n      <div class=\"post__content_text\">{{ getPost.content_text }}</div>\r\n      <div class=\"post__updated\">{{ setFormattedDate(getPost.updated_at) }}</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { dateMixin } from \"@/mixins/dateMixin\";\r\nimport { categoryStyleMixin } from \"@/mixins/categoryStyleMixin\";\r\n\r\nexport default {\r\n  name: \"Post\",\r\n  mixins: [dateMixin, categoryStyleMixin],\r\n  mounted() {\r\n    this.fetchPost();\r\n  },\r\n  computed: {\r\n    getPost() {\r\n      return this.$store.getters.GET_POST;\r\n    },\r\n    getCategories() {\r\n      return this.$store.getters.GET_CATEGORIES;\r\n    },\r\n  },\r\n  methods: {\r\n    fetchPost() {\r\n      this.$store.dispatch(\"fetchPost\", this.$route.params.id);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.post {\r\n  &__container {\r\n    @include container;\r\n    padding-top: 30px;\r\n    padding-bottom: 100px;\r\n  }\r\n\r\n  &__title {\r\n    @include font($font-main, 22px, 500);\r\n    color: $color-black;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  &__description {\r\n    @include font($font-main, 18px, 400);\r\n    color: $color-black;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  &__content_text {\r\n    @include font($font-main, 16px, 400);\r\n    color: $color-black;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  &__img-container {\r\n    float: left;\r\n    margin: 0 20px 0 0;\r\n  }\r\n\r\n  &__updated,\r\n  &__category {\r\n    @include font($font-main, 18px, 400);\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Post.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Post.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Post.vue?vue&type=template&id=61cc8794&scoped=true\"\nimport script from \"./Post.vue?vue&type=script&lang=js\"\nexport * from \"./Post.vue?vue&type=script&lang=js\"\nimport style0 from \"./Post.vue?vue&type=style&index=0&id=61cc8794&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"61cc8794\",\n  null\n  \n)\n\nexport default component.exports","export const categoryStyleMixin = {\r\n  methods: {\r\n    getCategoryStyle(categories, category) {\r\n      let style = {};\r\n      for (let key in categories) {\r\n        if (key === category) {\r\n          style.color = categories[key];\r\n        }\r\n      }\r\n      return style;\r\n    },\r\n  },\r\n};\r\n","export const dateMixin = {\r\n    methods: {\r\n        setFormattedDate(dataString) {\r\n            let date = new Date(dataString);\r\n      \r\n            if(!isNaN(date.getTime())) {\r\n              const year = date.getFullYear().toString().padStart(2, '0');\r\n              const month = (date.getMonth() + 1).toLocaleString().padStart(2, '0');\r\n              const day = date.getDate().toLocaleString().padStart(2, '0');\r\n              const hour= date.getHours().toLocaleString().padStart(2, '0');\r\n              const minutes= date.getMinutes().toLocaleString().padStart(2, '0');\r\n              const seconds= date.getSeconds().toLocaleString().padStart(2, '0');\r\n      \r\n              return `${year}-${month}-${day} ${hour}:${minutes}:${seconds}`\r\n            } else {\r\n              return 'Невозможно установить дату'\r\n            }\r\n          }\r\n    }\r\n}"],"names":["render","_vm","this","_c","_self","getPost","staticClass","_v","_s","title","description","style","getCategoryStyle","getCategories","category","attrs","photo_url","content_text","setFormattedDate","updated_at","_e","staticRenderFns","name","mixins","dateMixin","categoryStyleMixin","mounted","fetchPost","computed","$store","getters","GET_POST","GET_CATEGORIES","methods","dispatch","$route","params","id","component","categories","key","color","dataString","date","Date","isNaN","getTime","year","getFullYear","toString","padStart","month","getMonth","toLocaleString","day","getDate","hour","getHours","minutes","getMinutes","seconds","getSeconds"],"sourceRoot":""}